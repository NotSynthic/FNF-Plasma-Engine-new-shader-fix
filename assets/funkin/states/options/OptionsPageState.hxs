var grpAlphabet = ["HScript" => "Ignores typed vars so i do this shit lol"];
var grpAlphabet2 = ["HScript" => "Ignores typed vars so i do this shit lol"];
var grpAlphabet3 = ["HScript" => "Ignores typed vars so i do this shit lol"];
var grpCheckbox = ["HScript" => "Ignores typed vars so i do this shit lol"];
var grpValues = ["HScript" => "Ignores typed vars so i do this shit lol"];

var publicSettings = [];

var curSelected:Int = 0;

var pageTitleShit:String = "";

var descBox:FlxSprite;
var descText:FlxText;

var scrollMenu = FNFAssets.getSound(AssetPaths.sound("menus/scrollMenu"));
var cancelMenu = FNFAssets.getSound(AssetPaths.sound("menus/cancelMenu"));

function create(?pageTitle, ?settings) {
    state.canSwitchMods = false;
    
    var bg:FlxSprite = new FlxSprite().loadGraphic(AssetUtil.image("menuBGGradient"));
    add(bg);

    pageTitleShit = pageTitle;

    publicSettings = settings;

    for(i in 0...settings.length) {
        var setting = settings[i];
        var settingText:Alphabet = new Alphabet(0, (70 * i) + 30, setting.name, true, FlxColor.BLACK, false);
        settingText.isMenuItem = true;
        settingText.targetY = i;

        var saveDataShit:String = setting.saveData != null ? setting.saveData : setting.name;

        switch(setting.type) {
            case "Checkbox":
                settingText.x += 100;
                settingText.xAdd += 100;

                var checkbox:FNFCheckbox = new FNFCheckbox(0, 0, Settings.get(saveDataShit));
                checkbox.sprTracker = settingText;
                grpCheckbox[i] = checkbox;
                add(checkbox);
            case "Number", "Selector":
                var cockTextG:Alphabet = new Alphabet(0, (70 * i) + 30, "<          >", false, FlxColor.BLACK, false);
                cockTextG.isMenuItem = true;
                cockTextG.targetY = i;
                cockTextG.x = settingText.width + 70;
                cockTextG.xAdd = settingText.width + 70;
                cockTextG.yAdd -= 50;
                grpAlphabet2[i] = cockTextG;
                add(cockTextG);
            
                var cockText:Alphabet = new Alphabet(0, (70 * i) + 30, Settings.get(saveDataShit), false, FlxColor.BLACK, false);
                cockText.isMenuItem = true;
                cockText.targetY = i;
                cockText.x = settingText.width + 70;
                cockText.xAdd = settingText.width + 70;
                cockText.x += (cockTextG.width / 2) - (cockText.width / 2);
                cockText.xAdd += (cockTextG.width / 2) - (cockText.width / 2);
                cockText.yAdd -= 50;
                grpAlphabet3[i] = cockText;
                add(cockText);
        }

        grpAlphabet[i] = settingText;
        add(settingText);
    }

    var strip:FlxSprite = new FlxSprite().makeGraphic(FlxG.width, 40, FlxColor.BLACK);
    strip.alpha = 0.6;
    add(strip);

    var pageText:FlxText = new FlxText(10, 5, 0, "Options > "+pageTitle+"\n   ");
    pageText.setFormat(AssetPaths.font("funkin"), 25);
    add(pageText);

    descBox = new FlxSprite(30, FlxG.height - 65).makeGraphic(FlxG.width - 60, 1, FlxColor.BLACK);
    descBox.alpha = 0.8;
    add(descBox);

    descText = new FlxText(descBox.x + 5, descBox.y + 5, descBox.width - 10, "Description goes here lim foaw\nsdfhusufdhhAWslkjfhjsdlkjsfdhjlkjlk");
    descText.setFormat(AssetPaths.font("funkin"), 25, FlxColor.WHITE, FlxTextAlign.CENTER);
    add(descText);

    changeSelection(0);
}

function changeSelection(change:Int) {
    curSelected += change;
    if(curSelected < 0)
        curSelected = publicSettings.length-1;

    if(curSelected > publicSettings.length-1)
        curSelected = 0;

    for(i in 0...publicSettings.length) {
        var sex = grpAlphabet[i];
        if(sex != null) {
            sex.targetY = i - curSelected;
            sex.alpha = curSelected == i ? 1 : 0.6;
        }

        var sex = grpAlphabet2[i];
        if(sex != null) {
            sex.targetY = i - curSelected;
            sex.alpha = curSelected == i ? 1 : 0.6;
        }

        var sex = grpAlphabet3[i];
        if(sex != null) {
            sex.targetY = i - curSelected;
            sex.alpha = curSelected == i ? 1 : 0.6;
        }
    }

    descText.text = publicSettings[curSelected].description;
    descBox.scale.y = descText.height + 10;
    descBox.updateHitbox();
    descBox.y = FlxG.height - (descBox.height + 15);
    descText.y = descBox.y + 3;
    descText.text += "\n     ";

    FlxG.sound.play(scrollMenu);
}

var holdTimer:Float = 0.0;

function update(elapsed) {
    if(UIControls.justPressed("UP"))
        changeSelection(-1);

    if(UIControls.justPressed("DOWN"))
        changeSelection(1);

    if(UIControls.pressed("LEFT") || UIControls.pressed("RIGHT")) {
        holdTimer += elapsed;
        if(UIControls.justPressed("LEFT") || UIControls.justPressed("RIGHT") || holdTimer > 0.5) {
            var setting = publicSettings[curSelected];
            var saveDataShit:String = setting.saveData != null ? setting.saveData : setting.name;

            switch(setting.type) {
                case "Number":
                    var num:Float = Settings.get(saveDataShit);
                    num += UIControls.pressed("LEFT") ? -setting.valueMult : setting.valueMult;
                    num = FlxMath.roundDecimal(num, 2);
                    if(num < setting.values[0]) num = setting.values[0];
                    if(num > setting.values[1]) num = setting.values[1];
                    Settings.set(saveDataShit, num, false);

                    var settingText = grpAlphabet[curSelected];
                    var cockTextG = grpAlphabet2[curSelected];
                    var cockText = grpAlphabet3[curSelected];

                    if(cockText != null) {
                        cockText.changeText(num);
                        cockText.xAdd = settingText.width + 70;
                        cockText.xAdd += (cockTextG.width / 2) - (cockText.width / 2);
                        cockText.snapX = true;
                    }
                case "Selector":
                    var index:Int = setting.values.indexOf(Settings.get(saveDataShit));
                    index += UIControls.pressed("LEFT") ? -1 : 1;
                    
                    if(index < 0)
                        index = setting.values.length - 1;
    
                    if(index > setting.values.length - 1)
                        index = 0;
    
                    var dumb:String = setting.values[index];
                    Settings.set(saveDataShit, dumb, false);

                    var settingText = grpAlphabet[curSelected];
                    var cockTextG = grpAlphabet2[curSelected];
                    var cockText = grpAlphabet3[curSelected];

                    if(cockText != null) {
                        cockText.changeText(dumb);
                        cockText.xAdd = settingText.width + 70;
                        cockText.xAdd += (cockTextG.width / 2) - (cockText.width / 2);
                        cockText.snapX = true;
                    }
            }

            if(holdTimer > 0.6)
                holdTimer = 0.5;
        }
    } else {
        holdTimer = 0;
    }

    if(UIControls.justPressed("ACCEPT")) {
        var setting = publicSettings[curSelected];
        
        switch(setting.type) {
            case "Checkbox":
                var saveDataShit:String = setting.saveData != null ? setting.saveData : setting.name;
                Settings.set(saveDataShit, !Settings.get(saveDataShit), true);

                var checkbox:FNFCheckbox = grpCheckbox[curSelected];
                checkbox.status = Settings.get(saveDataShit);
                checkbox.refresh();

            case "KeybindMenu":
                var keyCount:Int = Std.int(setting.name.split("k Keybinds")[0]);
                state.openSubState(new KeybindMenu(keyCount, true));

            case "Menu":
                Main.switchState(new ScriptedState(setting.menuToLoad, setting.menuArguments.length > 0 ? setting.menuArguments : [pageTitleShit, publicSettings]));
        }
    }

    if(UIControls.justPressed("BACK")) {
        FlxG.sound.play(cancelMenu);
        Init.saveSettings();
        Main.switchState(new ScriptedState('OptionsMenu'));
    }
}