var grpAlphabet = ["HScript" => "Ignores typed vars so i do this shit lol"];
var grpAlphabet2 = ["HScript" => "Ignores typed vars so i do this shit lol"];
var grpCheckbox = ["HScript" => "Ignores typed vars so i do this shit lol"];
var grpValues = ["HScript" => "Ignores typed vars so i do this shit lol"];

var publicSettings = [];

var curSelected:Int = 0;

var pageTitleShit:String = "";

function create(?pageTitle, ?settings) {
    var bg:FlxSprite = new FlxSprite().loadGraphic(AssetUtil.image("menuBGGradient"));
    add(bg);

    pageTitleShit = pageTitle;

    publicSettings = settings;

    for(i in 0...settings.length) {
        var setting = settings[i];
        var settingText:Alphabet = new Alphabet(0, (70 * i) + 30, setting.name, true, FlxColor.BLACK, false);
        settingText.isMenuItem = true;
        settingText.targetY = i;

        switch(setting.type) {
            case "Checkbox":
                settingText.x += 100;
                settingText.xAdd += 100;

                var checkbox:FNFCheckbox = new FNFCheckbox(0, 0, Settings.get(setting.saveData != null ? setting.saveData : setting.name));
                checkbox.sprTracker = settingText;
                grpCheckbox[i] = checkbox;
                add(checkbox);
        }

        grpAlphabet[i] = settingText;
        add(settingText);
    }

    var strip:FlxSprite = new FlxSprite().makeGraphic(FlxG.width, 40, FlxColor.BLACK);
    strip.alpha = 0.6;
    add(strip);

    var pageText:FlxText = new FlxText(10, 5, 0, "Options > "+pageTitle+"\n   ");
    pageText.setFormat(AssetPaths.font("funkin"), 25);
    add(pageText);

    changeSelection(0);
}

function changeSelection(change:Int) {
    curSelected += change;
    if(curSelected < 0)
        curSelected = publicSettings.length-1;

    if(curSelected > publicSettings.length-1)
        curSelected = 0;

    for(i in 0...publicSettings.length) {
        var sex = grpAlphabet[i];
        if(sex != null) {
            sex.targetY = i - curSelected;
            sex.alpha = curSelected == i ? 1 : 0.6;
        }
    }
}

function update() {
    if(UIControls.justPressed("UP"))
        changeSelection(-1);

    if(UIControls.justPressed("DOWN"))
        changeSelection(1);

    if(UIControls.justPressed("ACCEPT")) {
        var setting = publicSettings[curSelected];
        
        switch(setting.type) {
            case "Checkbox":
                var saveDataShit:String = setting.saveData != null ? setting.saveData : setting.name;
                Settings.set(saveDataShit, !Settings.get(saveDataShit), true);

                var checkbox:FNFCheckbox = grpCheckbox[curSelected];
                checkbox.status = Settings.get(saveDataShit);
                checkbox.refresh();

            case "Menu":
                Main.switchState(new ScriptedState(setting.menuToLoad, setting.menuArguments.length > 0 ? setting.menuArguments : [pageTitleShit, publicSettings]));
        }
    }

    if(UIControls.justPressed("BACK")) {
        Main.switchState(new ScriptedState('OptionsMenu'));
        Init.saveSettings();
    }
}