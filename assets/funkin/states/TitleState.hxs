var freakyMenu:Sound;
var confirmMenu:Sound;

// sprites
var logo:FlxSprite;
var gfDance:FlxSprite;
var ngSpr:FlxSprite;
var titleText:FlxSprite;

var credGroup:FlxGroup;

var curWacky:Array<String> = ["???", "???"];

function getIntroTextShit() {
    var fullText:String = FNFAssets.getText(AssetPaths.txt('introText'));

    var firstArray:Array<String> = fullText.split('\n');
    var swagGoodArray:Array<Array<String>> = [];

    for (i in firstArray)
    {
        swagGoodArray.push(i.split('--'));
    }

    return swagGoodArray;
}

function startIntro() {
    trace("PLAYING MUSIC OR SOMETHING!");

    if(FlxG.sound.music == null || (FlxG.sound.music != null && !FlxG.sound.music.playing))
    {
        FlxG.sound.playMusic(freakyMenu, 0);
        FlxG.sound.music.fadeIn(4, 0, 0.7);
    }
}

function create() {
    freakyMenu = FNFAssets.getSound(AssetPaths.music('freakyMenu'));
    confirmMenu = FNFAssets.getSound(AssetPaths.sound('menus/confirmMenu'));

    if(FlxG.sound.music != null)
        FlxG.sound.music.stop();
    
    Conductor.changeBPM(102);
    Conductor.position = 0.0;

    logo = new FlxSprite(-150, -100);
    logo.frames = FNFAssets.getSparrow("title/fnfLogo");
    logo.antialiasing = Settings["Antialiasing"];
    logo.animation.addByPrefix("bump", "bump", 24, false);
    logo.animation.play("bump", true);
    logo.alpha = 0.0000001;
    add(logo);

    gfDance = new FlxSprite(FlxG.width * 0.4, FlxG.height * 0.07);
    gfDance.frames = FNFAssets.getSparrow("title/gfTitle");
    gfDance.antialiasing = Settings["Antialiasing"];
    gfDance.animation.addByPrefix("danceLeft", "danceLeft0", 24, false);
    gfDance.animation.addByPrefix("danceRight", "danceRight0", 24, false);
    gfDance.animation.play("danceRight", true);
    gfDance.alpha = 0.0000001;
    add(gfDance);

    titleText = new FlxSprite(100, FlxG.height * 0.8);
    titleText.frames = FNFAssets.getSparrow("title/titleEnter");
    titleText.antialiasing = Settings["Antialiasing"];
    titleText.animation.addByPrefix("idle", "Press Enter to Begin", 24, true);
    titleText.animation.addByPrefix("confirm", "ENTER PRESSED", 24, true);
    titleText.animation.play("idle", true);
    titleText.alpha = 0.0000001;
    add(titleText);

    ngSpr = new FlxSprite(0, FlxG.height * 0.52);
    ngSpr.loadGraphic(FNFAssets.getImage(AssetPaths.image("title/newgrounds")));
    ngSpr.antialiasing = Settings["Antialiasing"];
    ngSpr.alpha = 0.0000001;
    ngSpr.scale.set(0.8, 0.8);
    ngSpr.updateHitbox();
    ngSpr.screenCenter(FlxAxes.X);
    add(ngSpr);

    credGroup = new FlxGroup();
    add(credGroup);

    new FlxTimer().start(1, function(tmr:FlxTimer) {
        startIntro();
    });

    var introArray:Array<String> = getIntroTextShit();
    curWacky = introArray[FlxG.random.int(0, introArray.length-1)];
}

var lean:Bool = false;
var danceLeft:Bool = false;

function createCoolText(textArray:Array<String>) {
    for (i in 0...textArray.length)
    {
        var money:Alphabet = new Alphabet(0, 0, textArray[i], true, false);
        money.screenCenter(FlxAxes.X);
        money.y += (i * 60) + 200;
        credGroup.add(money);
    }
}

function addMoreText(text:String) {
    var coolText:Alphabet = new Alphabet(0, 0, text, true, false);
    coolText.screenCenter(FlxAxes.X);
    coolText.y += (credGroup.length * 60) + 200;
    credGroup.add(coolText);
}

function deleteCoolText() {
    while (credGroup.members.length > 0)
    {
        credGroup.remove(credGroup.members[0], true);
    }
}

function update(elapsed:Float) {
    if(FlxG.keys.justPressed.TAB)
        state.openSubState(new ModSelectionMenu());
        
    if(FlxG.sound.music != null)
        Conductor.position = FlxG.sound.music.time;

    if(FlxG.keys.justPressed.ENTER)
    {
        if(!skippedIntro)
            skipIntro();
        else
        {
            if(!lean)
            {
                lean = true;
                FlxG.sound.play(confirmMenu);
                FlxG.camera.flash(0xFFFFFFFF, 2);
                titleText.animation.play("confirm", true);

                new FlxTimer().start(1, function(tmr:FlxTimer) {
                    state.persistentUpdate = true;
                    state.persistentDraw = true;
                    Main.switchState(new MainMenu());
                });
            }
        }
    }
}

function beatHit(currentBeat:Int) {
    logo.animation.play("bump", true);

    danceLeft = !danceLeft;

    if (danceLeft)
        gfDance.animation.play('danceRight');
    else
        gfDance.animation.play('danceLeft');

    switch(currentBeat)
    {
        case 1:
            createCoolText(["swordcube", "Leather128", "Stilic", "Raf"]);
        case 3:
            addMoreText('present');
        case 4:
            deleteCoolText();
        case 5:
            createCoolText(['In association', 'with']);
        case 7:
            addMoreText('newgrounds');
            ngSpr.alpha = 1;
        case 8:
            deleteCoolText();
            ngSpr.alpha = 0.0000001;
        case 9:
            createCoolText([curWacky[0]]);
        case 11:
            addMoreText(curWacky[1]);
        case 12:
            deleteCoolText();
        case 13:
            addMoreText('Friday');
        case 14:
            addMoreText('Night');
        case 15:
            addMoreText('Funkin');
        case 16:
            skipIntro();
    }
}

var skippedIntro:Bool = false;

function skipIntro() {
    if (!skippedIntro)
    {
        remove(ngSpr);

        FlxG.camera.flash(0xFFFFFFFF, 4);
        remove(credGroup);
        skippedIntro = true;

        logo.alpha = 1;
        gfDance.alpha = 1;
        titleText.alpha = 1;
    }
}