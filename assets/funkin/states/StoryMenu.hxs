var scrollMenu:Sound;
var confirmMenu:Sound;
var cancelMenu:Sound;

var scoreText:FlxText;

var weeks:Array<Dynamic> = [];

var yellowBG:FlxSprite;
var grpWeeks:FlxGroup;
var storyCharacters:Array<ScriptedSprite> = [];

var curSelected:Int = 0;
var curDifficulty:Int = 1;

var curCharacters:Array<String> = ["", "", ""];
var tracksText:FlxText;

var leftArrow:FlxSprite;
var diffSprite:ScriptedSprite;
var rightArrow:FlxSprite;

var selected:Bool = false;

function create() {
    scrollMenu = FNFAssets.getSound(AssetPaths.sound("menus/scrollMenu"));
    confirmMenu = FNFAssets.getSound(AssetPaths.sound("menus/confirmMenu"));
    cancelMenu = FNFAssets.getSound(AssetPaths.sound("menus/cancelMenu"));

    DiscordRPC.changePresence(
        "In the Story Mode Menu",
        null
    );

    if(FlxG.sound.music == null || (FlxG.sound.music != null && !FlxG.sound.music.playing))
        FlxG.sound.playMusic(FNFAssets.getSound(AssetPaths.music("freakyMenu")));

    weeks = Json.parse(FNFAssets.getText(AssetPaths.json("storyWeeks"))).weeks;

    grpWeeks = new FlxGroup();
    add(grpWeeks);

    var blackBarThingie:FlxSprite = new FlxSprite().makeGraphic(FlxG.width, 56, FlxColor.BLACK);
    add(blackBarThingie);

    // incase i wanna make the colored bg optional: 0xFFF9CF51
    yellowBG = new FlxSprite(0, 56).makeGraphic(FlxG.width, 400, FlxColor.WHITE);
    add(yellowBG);

    if(weeks[curSelected].color == null)
        yellowBG.color = 0xFFF9CF51;
    else
        yellowBG.color = FlxColor.fromRGB(weeks[curSelected].color[0], weeks[curSelected].color[1], weeks[curSelected].color[2]);

    scoreText = new FlxText(10, 10, 0, "PERSONAL BEST: 0", 32);
    scoreText.setFormat(AssetPaths.font("vcr"), 32);
    add(scoreText);

    for(i in 0...3) {
        var char:ScriptedSprite = new ScriptedSprite("StoryModeCharacter", [weeks[curSelected].characters[i]], 100 + (i * 320), 60);
        add(char);
        storyCharacters.push(char);
    }

    for(i in 0...weeks.length) {
        var week = weeks[i];
        var spr:ScriptedSprite = new ScriptedSprite('StoryWeekSprite', [week.texture], 0, yellowBG.y + yellowBG.height + 10);
        spr.y += ((spr.height + 20) * i);
        spr.screenCenter(FlxAxes.X);
        spr.call("setTargetY", [i]);
        grpWeeks.add(spr);
    }

    var dumbStripThing = new FlxSprite(0, FlxG.height - 30);
    dumbStripThing.makeGraphic(FlxG.width, 30, FlxColor.BLACK);
    dumbStripThing.alpha = 0.6;
    add(dumbStripThing);

    var modPackJSON = Json.parse(FNFAssets.getText(AssetPaths.json("pack")));

    var dumbText = new FlxText(5, dumbStripThing.y + 5, 0, "Current Mod: "+modPackJSON.name+" - Press TAB to switch", 16);
    dumbText.setFormat(AssetPaths.font("vcr"), 16, FlxColor.WHITE, FlxTextAlign.LEFT);
    add(dumbText);

    var tracksImg:FlxSprite = new FlxSprite(100, 486);
    tracksImg.loadGraphic(FNFAssets.getImage(AssetPaths.image("menuTracks")));
    add(tracksImg);

    tracksText = new FlxText(0, tracksImg.y + (tracksImg.height + 15), FlxG.width, "Bopeebo\nFresh\nDad Battle");
    tracksText.setFormat(AssetPaths.font("vcr"), 32, 0xFFe55777, FlxTextAlign.CENTER);
    tracksText.x = tracksImg.x - (FlxG.width * 0.42);
    add(tracksText);

    var ui_tex = FNFAssets.getSparrow('storyUIAssets');

    leftArrow = new FlxSprite(grpWeeks.members[0].x + (grpWeeks.members[0].width + 10), grpWeeks.members[0].y + 10);
    leftArrow.frames = ui_tex;
    leftArrow.animation.addByPrefix('idle', "arrow left");
    leftArrow.animation.addByPrefix('press', "arrow push left");
    leftArrow.animation.play('idle');
    add(leftArrow);

    diffSprite = new ScriptedSprite("DifficultySprite", ["easy"], leftArrow.x + 215, leftArrow.y + 45);
    add(diffSprite);

    rightArrow = new FlxSprite(FlxG.width * 0.98, leftArrow.y);
    rightArrow.frames = ui_tex;
    rightArrow.animation.addByPrefix('idle', 'arrow right');
    rightArrow.animation.addByPrefix('press', "arrow push right", 24, false);
    rightArrow.animation.play('idle');
    add(rightArrow);

    changeSelection(0);
    changeDifficulty(0);
}

var lerpScore:Float = 0;
var intendedScore:Int = 0;

function updateScore() {
    intendedScore = Highscore.getScore(weeks[curSelected].texture+"-"+StringTools.trim(weeks[curSelected].difficulties[curDifficulty]));

    lerpScore = FlxMath.lerp(lerpScore, intendedScore, Main.deltaTime * 9.0);
    scoreText.text = "PERSONAL BEST: " + Math.round(lerpScore);
}

function beatHit() {
    storyCharacters[0].call("dance");
    if(!selected)
        storyCharacters[1].call("dance");
    storyCharacters[2].call("dance");
}

function changeSelection(change:Int) {
    curSelected += change;
    if(curSelected < 0)
        curSelected = grpWeeks.length - 1;
    if(curSelected > grpWeeks.length - 1)
        curSelected = 0;

    var i:Int = 0;
    for(item in grpWeeks.members) {
        item.call("setTargetY", [i-curSelected]);
        item.alpha = curSelected == i ? 1 : 0.6;
        i++;
    };

    var weekData = weeks[curSelected];
    for(i in 0...weekData.characters.length) {
        if(curCharacters[i] != weekData.characters[i]) {
            curCharacters[i] = weekData.characters[i];
            remove(storyCharacters[i], true);
            storyCharacters[i].kill();
            storyCharacters[i].destroy();

            var char:ScriptedSprite = new ScriptedSprite("StoryModeCharacter", [weekData.characters[i]], 100 + (i * 320), 60);
            add(char);
            storyCharacters[i] = char;
        }
    }

    tracksText.text = "";
    for(track in weekData.tracks) {
        tracksText.text += track + "\n";
    }

    FlxG.sound.play(scrollMenu);
}

var oldDiff:String = "";

function changeDifficulty(change:Int) {
    curDifficulty += change;
    if(curDifficulty < 0)
        curDifficulty = weeks[curSelected].difficulties.length - 1;
    if(curDifficulty > weeks[curSelected].difficulties.length - 1)
        curDifficulty = 0;

    if(weeks[curSelected].difficulties[curDifficulty] != oldDiff) {
        oldDiff = weeks[curSelected].difficulties[curDifficulty];
        diffSprite.alpha = 0;
        diffSprite.y = leftArrow.y + 30;
        diffSprite.call("changeDifficulty", [weeks[curSelected].difficulties[curDifficulty]]);
        FlxTween.tween(diffSprite, {y: leftArrow.y + 45, alpha: 1}, 0.07);
    }
}

var bgColor:Array<Float> = [
    249, 207, 81
];

function update(elapsed) {
    if(FlxG.keys.justPressed.TAB)
        state.openSubState(new ModSelectionMenu());

    var time:Float = Main.deltaTime * 9;

    var color = weeks[curSelected].color != null ? weeks[curSelected].color : [249, 207, 81];

    if(color != null) {
        bgColor[0] = FlxMath.lerp(bgColor[0], color[0], time);
        bgColor[1] = FlxMath.lerp(bgColor[1], color[1], time);
        bgColor[2] = FlxMath.lerp(bgColor[2], color[2], time);
    }

    updateScore();

    yellowBG.color = FlxColor.fromRGB(Std.int(bgColor[0]), Std.int(bgColor[1]), Std.int(bgColor[2]));
    
    if(FlxG.sound.music != null && FlxG.sound.music.playing)
        Conductor.position = FlxG.sound.music.time;
    else
        Conductor.position += elapsed * 1000.0;

    if(!selected) {
        if(UIControls.justPressed("UP"))
            changeSelection(-1);

        if(UIControls.justPressed("DOWN"))
            changeSelection(1);

        // cock

        if(UIControls.justPressed("LEFT")) {
            leftArrow.animation.play("press");
            changeDifficulty(-1);
        }

        if(UIControls.justPressed("RIGHT")) {
            rightArrow.animation.play("press");
            changeDifficulty(1);
        }
        
        // rfsjiodp;

        if(UIControls.justReleased("LEFT")) {
            leftArrow.animation.play("idle");
        }

        if(UIControls.justReleased("RIGHT")) {
            rightArrow.animation.play("idle");
        }

        if(UIControls.justPressed("BACK"))
        {
            FlxG.sound.play(cancelMenu);
            Main.switchState(new ScriptedState('MainMenu'));
        }

        if(UIControls.justPressed("ACCEPT"))
            selectWeek();
    }
}

function selectWeek() {
    selected = true;
    storyCharacters[1].playAnim("confirm");
    FlxG.sound.play(confirmMenu);

    PlayState_.isStoryMode = true;
    PlayState_.storyScore = 0;

    PlayState_.availableDifficulties = weeks[curSelected].difficulties;

    PlayState_.songMultiplier = 1.0;
    PlayState_.storyPlaylist = weeks[curSelected].tracks;
    PlayState_.actualSongName = PlayState_.storyPlaylist[0];
    PlayState_.actualWeekName = weeks[curSelected].texture;
    PlayState_.SONG = SongLoader.getJSON(PlayState_.storyPlaylist[0], weeks[curSelected].difficulties[curDifficulty]);

    grpWeeks.members[curSelected].call("startFlashing");

    new FlxTimer().start(1, function() {
        selected = false;
        Main.switchState(new PlayState_());
    });
}