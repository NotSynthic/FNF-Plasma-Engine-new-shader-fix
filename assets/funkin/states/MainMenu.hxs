import flixel.FlxObject;

var scrollMenu:Sound;
var cancelMenu:Sound;
var confirmMenu:Sound;

var bg:FlxSprite;
var magenta:FlxSprite;

var menuButtons:FlxGroup;

var menuOptions:Array<String> = [
    "story-mode",
    "freeplay",
    "options"
];

var camFollow:FlxObject;
var camFollowPos:FlxObject;

var curSelected:Int = 0;

var engineVersion:String = "Genesis Engine v"+Main.engineVersion;
var engineTxt:FlxText;

function create()
{
    scrollMenu = FNFAssets.getSound(AssetPaths.sound('menus/scrollMenu'));
    cancelMenu = FNFAssets.getSound(AssetPaths.sound('menus/cancelMenu'));
    confirmMenu = FNFAssets.getSound(AssetPaths.sound('menus/confirmMenu'));

    bg = new FlxSprite();
    bg.loadGraphic(FNFAssets.getImage(AssetPaths.image('menuBG')));
    bg.scale.set(1.2, 1.2);
    bg.updateHitbox();
    bg.screenCenter();
    bg.scrollFactor.set(0.1, 0.1);
    bg.antialiasing = Init.trueSettings.get("Antialiasing");
    add(bg);

    magenta = new FlxSprite();
    magenta.loadGraphic(FNFAssets.getImage(AssetPaths.image('menuBGDesat')));
    magenta.scale.set(1.2, 1.2);
    magenta.updateHitbox();
    magenta.screenCenter();
    magenta.scrollFactor.set(0.1, 0.1);
    magenta.antialiasing = Init.trueSettings.get("Antialiasing");
    magenta.color = 0xFFfd719b;
    magenta.visible = false;
    add(magenta);

    menuButtons = new FlxGroup();
    add(menuButtons);

    for(i in 0...menuOptions.length)
    {
        var button:FlxSprite = new FlxSprite(0, 70 + (170 * i));
        button.frames = FNFAssets.getSparrow('mainmenu/'+menuOptions[i]);
        button.animation.addByPrefix("idle", "basic", 24, true);
        button.animation.addByPrefix("selected", "white", 24, true);
        button.animation.play("idle");
        button.antialiasing = Init.trueSettings.get("Antialiasing");
        button.screenCenter(FlxAxes.X);
        button.scrollFactor.set();
        button.ID = i;
        menuButtons.add(button);
    }

    engineTxt = new FlxText(5, FlxG.height - 25, 0, engineVersion);
    engineTxt.setFormat(AssetPaths.font("vcr"), 16, FlxColor.WHITE, FlxTextAlign.LEFT);
    engineTxt.setBorderStyle(FlxTextBorderStyle.OUTLINE, FlxColor.BLACK, 1);
    engineTxt.scrollFactor.set();
    add(engineTxt);

    camFollow = new FlxObject(menuButtons.members[0].x, menuButtons.members[0].y, 1, 1);
    camFollowPos = new FlxObject(menuButtons.members[0].x, menuButtons.members[0].y, 1, 1);
    add(camFollow);
    add(camFollowPos);

    changeSelection(0);

    FlxG.camera.follow(camFollowPos, null, 1);
}

var accepted:Bool = false;

function update()
{
    camFollowPos.setPosition(FlxMath.lerp(camFollowPos.x, camFollow.x, Main.deltaTime * 9), FlxMath.lerp(camFollowPos.y, camFollow.y, Main.deltaTime * 9));

    if(!accepted)
    {
        if(UIControls.justPressed("BACK"))
        {
            FlxG.sound.play(cancelMenu);
            Main.switchState(new TitleState());
        }

        if(UIControls.justPressed("UP"))
            changeSelection(-1);

        if(UIControls.justPressed("DOWN"))
            changeSelection(1);

        if(UIControls.justPressed("ACCEPT"))
        {
            accepted = true;
            FlxG.sound.play(confirmMenu);

            // Toggle flashing for magenta bg sprite
            if(!Init.trueSettings.get("Photosensitive Mode")) FlxFlicker.flicker(magenta, 1.1, 0.15, false);

            for(spr in menuButtons)
            {
                if (curSelected != spr.ID)
                {
                    FlxTween.tween(spr, {alpha: 0}, 0.4, {
                        ease: FlxEase.quadOut,
                        onComplete: function(twn:FlxTween) {
                            spr.kill();
                        }
                    });
                }
                else
                {
                    // Toggle flashing for the currently selected button
                    if(!Init.trueSettings.get("Photosensitive Mode"))
                    {
                        FlxFlicker.flicker(spr, 1, 0.06, false, false, function(flick:FlxFlicker)
                        {
                            switchToOtherStateShit();
                        });
                    }
                    else
                    {
                        new FlxTimer().start(1, function(tmr:FlxTimer) {
                            switchToOtherStateShit();
                        });
                    }
                }
            };
        }
    }
}

function switchToOtherStateShit()
{
    switch(menuOptions[curSelected])
    {
        case 'story-mode':
            trace("story mode = unimplemented");
            //Main.switchState(new StoryMenuState());
        case 'freeplay':
            Main.switchState(new FreeplayMenu());
        case 'options':
            trace("options menu = unimplemented");
            //Main.switchState(new OptionsState());
    }
}

function changeSelection(change:Int)
{
    curSelected += change;
    if(curSelected < 0)
        curSelected = menuOptions.length-1;

    if(curSelected > menuOptions.length-1)
        curSelected = 0;

    var i:Int = 0;
    for(spr in menuButtons.members)
    {
        if(curSelected == i)
            spr.animation.play("selected");
        else
            spr.animation.play("idle");

        spr.updateHitbox();
        spr.screenCenter(FlxAxes.X);

        i += 1;
    };

    camFollow.y = menuButtons.members[curSelected].y;

    FlxG.sound.play(scrollMenu);
}