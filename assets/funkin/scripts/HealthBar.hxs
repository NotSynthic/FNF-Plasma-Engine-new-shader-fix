import flixel.ui.FlxBarFillDirection;
import flixel.ui.FlxBar;

var image:FlxSprite;
var bar:FlxBar;

var iconP2:HealthIcon;
var iconP1:HealthIcon;

var scoreTxt:FlxText;
var scoreDivider:String = " â€¢ ";

function create()
{
    image = new FlxSprite(0, Init.trueSettings.get("Downscroll") ? 60 : FlxG.height - 160);
    image.loadGraphic(FNFAssets.getImage(AssetPaths.image("healthBar")));
    image.screenCenter(FlxAxes.X);
    add(image);

    bar = new FlxBar(image.x + 4, image.y + 4, FlxBarFillDirection.RIGHT_TO_LEFT, Std.int(image.width - 8), Std.int(image.height - 8), PlayState,
    'health', PlayState.minHealth, PlayState.maxHealth);
    bar.createFilledBar(0xFFff0000, 0xFF00ff00);
    add(bar);

    iconP1 = new HealthIcon(PlayState.bf != null ? PlayState.bf.curCharacter : "face", true);
    iconP1.y = bar.y - (iconP1.height / 2);
    add(iconP1);

    iconP2 = new HealthIcon(PlayState.dad != null ? PlayState.dad.curCharacter : "face", false);
    iconP2.y = bar.y - (iconP2.height / 2);
    add(iconP2);

    scoreTxt = new FlxText(0, image.y + 35, 0, "test");
    scoreTxt.setFormat(AssetPaths.font("vcr"), 16, FlxColor.WHITE, FlxTextAlign.CENTER);
    scoreTxt.setBorderStyle(FlxTextBorderStyle.OUTLINE, FlxColor.BLACK, 1);
    scoreTxt.scrollFactor.set();
    add(scoreTxt);

    updateScoreText();
    positionIcons();
}

function beatHit(curBeat)
{
    iconP2.scale.set(1.2, 1.2);
    iconP2.updateHitbox();

    iconP1.scale.set(1.2, 1.2);
    iconP1.updateHitbox();

    positionIcons();
}

function updateScoreText()
{
    scoreTxt.text = (
        "Score: " + PlayState.songScore + scoreDivider +
        "Accuracy: " + FlxMath.roundDecimal(PlayState.songAccuracy*100.0, 2) + "%" + scoreDivider +
        "Misses: " + PlayState.songMisses + scoreDivider +
        "Rank: " + Ranking.getRank(PlayState.songAccuracy*100.0)
    );
    if(PlayState.botPlay)
        scoreTxt.text += scoreDivider + "[BOTPLAY]";

    scoreTxt.screenCenter(FlxAxes.X);
}

function update()
{
    var iconLerp:Float = Main.deltaTime * 25;

    iconP2.scale.set(FlxMath.lerp(iconP2.scale.x, 1, iconLerp), FlxMath.lerp(iconP2.scale.y, 1, iconLerp));
    iconP2.updateHitbox();

    iconP1.scale.set(FlxMath.lerp(iconP1.scale.x, 1, iconLerp), FlxMath.lerp(iconP1.scale.y, 1, iconLerp));
    iconP1.updateHitbox();

    if(bar.percent < 20)
    {
        iconP2.animation.play("winning");
        iconP1.animation.play("losing");
    }
    else if(bar.percent > 80)
    {
        iconP2.animation.play("losing");
        iconP1.animation.play("winning");
    }
    else
    {
        iconP2.animation.play("normal");
        iconP1.animation.play("normal");
    }

    positionIcons();
}

function positionIcons()
{
    var iconOffset:Int = 26;

    iconP1.x = bar.x + (bar.width * (FlxMath.remapToRange(bar.percent, 0, 100, 100, 0) * 0.01) - iconOffset);
    iconP2.x = bar.x + (bar.width * (FlxMath.remapToRange(bar.percent, 0, 100, 100, 0) * 0.01)) - (iconP2.width - iconOffset);
}