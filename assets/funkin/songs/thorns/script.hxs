// my code is ass so createPost is for the notes and create is for everything else
var dialogue;

function update(elapsed) {
    if(dialogue != null)
        dialogue.update(elapsed);
}

function create() {
    if(PlayState_.isStoryMode) {
        inCutscene = true;

        // we like preloading!
        FNFAssets.getSound(AssetPaths.sound('Senpai_Dies'));

        FlxG.sound.playMusic(FNFAssets.getSound(AssetPaths.music("LunchboxScary")), 1);

        var red:FlxSprite = new FlxSprite(-100, -100).makeGraphic(FlxG.width * 2, FlxG.height * 2, 0xFFff1b31);
        red.scrollFactor.set();
        add(red);

        var senpaiEvil:FlxSprite = new FlxSprite();
        senpaiEvil.frames = FNFAssets.getSparrow('senpaiDies');
        senpaiEvil.animation.addByPrefix('idle', 'Senpai Pre Explosion', 24, false);
        senpaiEvil.setGraphicSize(Std.int(senpaiEvil.width * 6));
        senpaiEvil.scrollFactor.set();
        senpaiEvil.updateHitbox();
        senpaiEvil.screenCenter();
            
        var black:FlxSprite = new FlxSprite(-100, -100).makeGraphic(FlxG.width * 2, FlxG.height * 2, FlxColor.BLACK);
        black.scrollFactor.set();

        camHUD.visible = false;
        new FlxTimer().start(0.3, function(tmr:FlxTimer) {
            black.alpha -= 0.15;

            if (black.alpha > 0) {
                tmr.reset(0.3);
            } else {
                senpaiEvil.alpha = 0;
                add(senpaiEvil);
                new FlxTimer().start(0.3, function(swagTimer:FlxTimer) {
                    senpaiEvil.alpha += 0.15;

                    if (senpaiEvil.alpha < 1) {
                        swagTimer.reset();
                    } else {
                        senpaiEvil.animation.play('idle');

                        FlxG.sound.play(FNFAssets.getSound(AssetPaths.sound('Senpai_Dies')), 1, false, null, true, function() {
                            remove(senpaiEvil);
                            remove(red);
                            FlxG.camera.fade(FlxColor.WHITE, 0.01, true, function() {
                                dialogue = new HScript("dialogue/scripts/default");
                                dialogue.start();
                            }, true);
                        });

                        new FlxTimer().start(3.2, function(deadTime:FlxTimer) {
                            FlxG.camera.fade(FlxColor.WHITE, 1.6, false);
                        });
                    }
                });
            }
        });
    }

    countdownImageLocation = "countdown/pixel";
    countdownSoundLocation = "countdown/pixel";
    countdownScale = 6;

    ratingAssetPath = "ratings/pixel";
    comboAssetPath = "combo/pixel";

    ratingScale = 4.1;
    comboScale = 5;

    ratingAntialiasing = false;
    comboAntialiasing = false;
}

function createPost() {
    countdownPreReady.antialiasing = false;
    countdownReady.antialiasing = false;
    countdownSet.antialiasing = false;
    countdownGo.antialiasing = false;
    
    currentSkin += "-pixel";
    UI.opponentStrums.reloadSkin();
    UI.playerStrums.reloadSkin();
}